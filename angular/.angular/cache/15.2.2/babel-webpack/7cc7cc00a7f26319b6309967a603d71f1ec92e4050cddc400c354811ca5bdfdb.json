{"ast":null,"code":"import { CocheModule } from '../models/coche/coche.module';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CocheService {\n  // instanciamos el httpclient en el constructor de la clase\n  constructor(http) {\n    this.http = http;\n    this.coches = [];\n    // Uri del http\n    this.uri = \"http://localhost:3000/coches\";\n    this.selectedCoche = new CocheModule('Electrico');\n  }\n  // Nos devolvera un arreglo de empleados que vendran desde nuestro servidor\n  getCoches() {\n    return this.http.get(this.uri);\n  }\n  postCoche(coche) {\n    // al hacer el post tendremos que pasarle la url y el dato que le queremos pasar que en nuestro caso sera el coche\n    return this.http.post(this.uri, coche);\n  }\n  putCoche(coche) {\n    // put necesita lo mismo pero nosotros en nuestra api rest le tenemos que pasar el id del empleado para que este\n    // sepa cual es el que tiene que cambiar y de ahi el  + `/${coche._id}`\n    return this.http.put(this.uri + `/${coche._id}`, coche);\n  }\n  deleteCoche(id) {\n    // Aqui lo mismo que antes usamos el metodo delete de http y le mandamos el id del coche que queremos eliminar\n    return this.http.delete(this.uri + `/${id}`);\n  }\n}\nCocheService.ɵfac = function CocheService_Factory(t) {\n  return new (t || CocheService)(i0.ɵɵinject(i1.HttpClient));\n};\nCocheService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CocheService,\n  factory: CocheService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAKA,SAASA,WAAW,QAAQ,8BAA8B;;;AAM1D,OAAM,MAAOC,YAAY;EAMvB;EACAC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAJxB,WAAM,GAAkB,EAAE;IAS1B;IACA,QAAG,GAAG,8BAA8B;IALlC,IAAI,CAACC,aAAa,GAAG,IAAIJ,WAAW,CAAC,WAAW,CAAC;EACnD;EASA;EACAK,SAAS;IACP,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAC,IAAI,CAACC,GAAG,CAAC;EAChC;EAEAC,SAAS,CAACC,KAAkB;IAE1B;IACA,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAC,IAAI,CAACH,GAAG,EAAEE,KAAK,CAAC;EAExC;EAEAE,QAAQ,CAACF,KAAkB;IACzB;IACA;IACA,OAAO,IAAI,CAACN,IAAI,CAACS,GAAG,CAAC,IAAI,CAACL,GAAG,GAAG,IAAIE,KAAK,CAACI,GAAG,EAAE,EAAEJ,KAAK,CAAE;EAC1D;EAEAK,WAAW,CAACC,EAAU;IACpB;IACA,OAAO,IAAI,CAACZ,IAAI,CAACa,MAAM,CAAC,IAAI,CAACT,GAAG,GAAG,IAAIQ,EAAE,EAAE,CAAC;EAC9C;;AAvCWd,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAgB,SAAZhB,YAAY;EAAAiB,YAHX;AAAM","names":["CocheModule","CocheService","constructor","http","selectedCoche","getCoches","get","uri","postCoche","coche","post","putCoche","put","_id","deleteCoche","id","delete","factory","providedIn"],"sourceRoot":"","sources":["/home/pio/Documentos/Documentos_pablo/uni/3_curso/2do.cuatri/ast/practica/mean_curso/angular/src/app/services/coche.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n// Tendremos que importar el modulo httpclient para poder hacer el crud con el servidor de mi pagina web\n// de tal manera que podamos realizar el CRUD\nimport { HttpClient} from '@angular/common/http'\nimport { CocheModule } from '../models/coche/coche.module';\n\n@Injectable({\n  providedIn: 'root'\n\n})\nexport class CocheService {\n\n  selectedCoche: CocheModule;\n  coches: CocheModule[] = [];\n\n\n  // instanciamos el httpclient en el constructor de la clase\n  constructor(private http: HttpClient) { \n    this.selectedCoche = new CocheModule('Electrico');\n  } \n\n\n  // Uri del http\n  uri = \"http://localhost:3000/coches\"\n\n\n  \n\n  // Nos devolvera un arreglo de empleados que vendran desde nuestro servidor\n  getCoches(){\n    return this.http.get(this.uri);\n  }\n\n  postCoche(coche: CocheModule){\n\n    // al hacer el post tendremos que pasarle la url y el dato que le queremos pasar que en nuestro caso sera el coche\n    return this.http.post(this.uri, coche);\n\n  }\n\n  putCoche(coche: CocheModule){ \n    // put necesita lo mismo pero nosotros en nuestra api rest le tenemos que pasar el id del empleado para que este\n    // sepa cual es el que tiene que cambiar y de ahi el  + `/${coche._id}`\n    return this.http.put(this.uri + `/${coche._id}`, coche );\n  }\n\n  deleteCoche(id: String){\n    // Aqui lo mismo que antes usamos el metodo delete de http y le mandamos el id del coche que queremos eliminar\n    return this.http.delete(this.uri + `/${id}`);\n  }\n  \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}