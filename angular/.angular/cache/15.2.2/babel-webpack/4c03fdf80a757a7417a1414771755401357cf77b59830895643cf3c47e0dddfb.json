{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\n// import { response } from 'express';\nimport { CocheModule } from 'src/app/models/coche/coche.module';\n// import { FormGroup, FormControl, Validators } from '@angular/forms';\n// Importamos el servicio de coches para que se pueda usar en el modelo de html\nimport { CocheService } from '../../services/coche.service';\n// Decorador de la clase\nlet CochesComponent = class CochesComponent {\n  buscar() {\n    console.log(\"Buscando \" + this.criterio + \" que coincida con \" + this.busqueda);\n    switch (this.criterio) {\n      case \"ID\":\n        this.cocheService.findByID(this.busqueda).subscribe(res => {\n          this.cocheService.coches = res;\n          console.log(res);\n        });\n        break;\n      case \"MARCA\":\n        this.cocheService.findByMarca(this.busqueda).subscribe(res => {\n          this.cocheService.coches = res;\n          console.log(res);\n        });\n        break;\n      case \"MODELO\":\n        break;\n      default:\n        break;\n    }\n  }\n  constructor(cocheService) {\n    // myForm = new FormGroup({\n    //   marca: new FormControl('', [\n    //     Validators.required,\n    //     Validators.minLength(3)\n    //   ]),\n    //   modelo: new FormControl('', [\n    //     Validators.required,\n    //     Validators.email\n    //   ]),\n    //   carroceria: new FormControl('', [\n    //     Validators.required,\n    //     Validators.minLength(10)\n    //   ])\n    // });\n    // onSubmit() {\n    //   console.log(this.myForm.value);\n    // }\n    this.busqueda = ''; // TExto por el que se va a buscar\n    this.criterio = ''; // Criterio para elejir la busqueda\n    this.cocheService = cocheService;\n  }\n  ngOnInit() {\n    console.log(\"iniciando\");\n    this.getCoches();\n  }\n  // // Definimos la funcion que va a manejar el formulario\n  addCoche(form) {\n    // En caso de que existe el id lo actualizamos\n    if (form.value._id) {\n      console.log(\"Editando coche\");\n      this.cocheService.putCoche(form.value).subscribe(res => {\n        if (res.valueOf() == -1) {\n          console.log(\"fatal\");\n        }\n        console.log(res);\n        this.resetForm(form);\n        M.toast({\n          html: \"Edit Succesfully\"\n        });\n        this.getCoches();\n      });\n    } else {\n      // En caso de que no exista el id lo eliminamos\n      console.log(form.value);\n      this.cocheService.postCoche(form.value)\n      // Con subscrive obtenemos la respuesta del servidor.\n      .subscribe(res => {\n        console.log(res);\n        this.resetForm(form); // reseteamos el formulario \n        M.toast({\n          html: 'Save Succesfully'\n        });\n        this.getCoches();\n      });\n    }\n  }\n  getCoches() {\n    console.log(\"obtener coches\");\n    this.cocheService.getCoches().subscribe(res => {\n      this.cocheService.coches = res;\n      console.log(res);\n    });\n  }\n  editCoche(coche) {\n    console.log(\"Editar coche\");\n    this.cocheService.selectedCoche = coche;\n  }\n  deleteCoche(_id) {\n    console.log(\"Eliminar coche\");\n    this.cocheService.deleteCoche(_id).subscribe(res => {\n      console.log(res);\n      this.getCoches();\n      console.log(\"Coche eliminado\");\n      M.toast({\n        html: \"Eliminado con exito\"\n      });\n    });\n    this.getCoches();\n  }\n  resetForm(form) {\n    if (form) {\n      form.reset();\n      this.cocheService.selectedCoche = new CocheModule();\n    }\n  }\n  findByMarca(marca) {\n    this.cocheService.findByMarca(marca).subscribe(res => {\n      this.cocheService.coches = res;\n      console.log(res);\n    });\n  }\n};\nCochesComponent = __decorate([Component({\n  selector: 'app-coches',\n  templateUrl: './coches.component.html',\n  styleUrls: ['./coches.component.css'],\n  providers: [CocheService]\n})\n// Exportamos la clase y la definimos\n], CochesComponent);\nexport { CochesComponent };","map":{"version":3,"mappings":"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","names":["Component","CocheModule","CocheService","CochesComponent","buscar","console","log","criterio","busqueda","cocheService","findByID","subscribe","res","coches","findByMarca","constructor","ngOnInit","getCoches","addCoche","form","value","_id","putCoche","valueOf","resetForm","M","toast","html","postCoche","editCoche","coche","selectedCoche","deleteCoche","reset","marca","selector","templateUrl","styleUrls","providers"],"sourceRoot":"","sources":["/home/pio/Documentos/Documentos_pablo/uni/3_curso/2do.cuatri/ast/practica/mean_curso/angular/src/app/components/coches/coches.component.ts"],"sourcesContent":["import { Component , OnInit } from '@angular/core';\nimport {  NgForm } from '@angular/forms'; // Necesario para trabajar con formularios\n// import { response } from 'express';\nimport { CocheModule } from 'src/app/models/coche/coche.module';\n\n// import { FormGroup, FormControl, Validators } from '@angular/forms';\n\n\n\n\n\n// Importamos el servicio de coches para que se pueda usar en el modelo de html\nimport { CocheService } from '../../services/coche.service';\n\ndeclare var M: any; // Esto es de materialize para enviar alertas a los usuarios\n\n\n// Decorador de la clase\n@Component({\n  selector: 'app-coches', // Definimos como llamar al componente desde html\n  templateUrl: './coches.component.html', //url a la pagina html del componente\n  styleUrls: ['./coches.component.css'], // url a la pagina de estilos del componente\n  providers: [CocheService]\n\n})\n\n// Exportamos la clase y la definimos\nexport class CochesComponent {\n\n  // myForm = new FormGroup({\n  //   marca: new FormControl('', [\n  //     Validators.required,\n  //     Validators.minLength(3)\n  //   ]),\n  //   modelo: new FormControl('', [\n  //     Validators.required,\n  //     Validators.email\n  //   ]),\n  //   carroceria: new FormControl('', [\n  //     Validators.required,\n  //     Validators.minLength(10)\n  //   ])\n  // });\n\n  // onSubmit() {\n  //   console.log(this.myForm.value);\n  // }\n  busqueda: string = ''; // TExto por el que se va a buscar\n  criterio: string = ''; // Criterio para elejir la busqueda\n  buscar(){\n    console.log(\"Buscando \" + this.criterio +\" que coincida con \" + this.busqueda);\n    \n    switch (this.criterio) {\n      case \"ID\":\n        this.cocheService.findByID(this.busqueda)\n          .subscribe(res =>{\n            this.cocheService.coches = res as CocheModule[];\n            console.log(res);\n          })\n        break;\n      case \"MARCA\":\n        this.cocheService.findByMarca(this.busqueda)\n          .subscribe(res =>{\n            this.cocheService.coches = res as CocheModule[];\n            console.log(res);\n          })\n        break;\n      case \"MODELO\":\n        break;\n      default:\n        break;\n    }\n  }\n\n\n  // Creeamos el constructor de la clase y iniciamos el servicio de coche.\n  cocheService: CocheService;\n  constructor( cocheService: CocheService){\n    this.cocheService = cocheService;\n  }\n  \n  ngOnInit(){\n    console.log(\"iniciando\");\n    this.getCoches();\n  }\n\n  // // Definimos la funcion que va a manejar el formulario\n  addCoche(form:NgForm){\n    // En caso de que existe el id lo actualizamos\n    if (form.value._id){\n      console.log(\"Editando coche\");\n      this.cocheService.putCoche(form.value)\n        .subscribe(res =>{\n          if (res.valueOf() == -1){\n            console.log(\"fatal\");\n            \n          }\n          console.log(res);\n          this.resetForm(form);\n          M.toast({html: \"Edit Succesfully\"});\n          this.getCoches();\n          \n      })\n    } else{\n      // En caso de que no exista el id lo eliminamos\n      console.log(form.value);\n      this.cocheService.postCoche(form.value)\n      \n      // Con subscrive obtenemos la respuesta del servidor.\n        .subscribe(res => {\n          console.log(res)\n          this.resetForm(form); // reseteamos el formulario \n          M.toast({html: 'Save Succesfully'});\n          this.getCoches();\n        })\n      }\n  }\n\n  getCoches(){\n    console.log(\"obtener coches\");\n    \n    this.cocheService.getCoches()\n      .subscribe(res =>{\n        this.cocheService.coches = res as CocheModule[];\n        console.log(res);\n      })\n  }\n\n  \n  editCoche(coche: CocheModule){\n    console.log(\"Editar coche\");\n    \n    this.cocheService.selectedCoche = coche;\n  }\n\n  deleteCoche(_id: string){\n    console.log(\"Eliminar coche\");\n    \n    this.cocheService.deleteCoche(_id)\n      .subscribe(res => {\n        console.log(res);\n        this.getCoches();\n        console.log(\"Coche eliminado\");\n        M.toast({html: \"Eliminado con exito\"});\n        \n      })\n    this.getCoches();\n  }\n\n  resetForm(form?: NgForm){\n    if (form) {\n      form.reset();\n      this.cocheService.selectedCoche = new CocheModule();\n    }\n  }\n  \n  findByMarca(marca: string){\n    this.cocheService.findByMarca(marca)\n      .subscribe(res =>{\n        this.cocheService.coches = res as CocheModule[];\n        console.log(res);\n      })\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}